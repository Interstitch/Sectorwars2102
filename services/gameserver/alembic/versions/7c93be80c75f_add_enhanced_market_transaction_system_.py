"""add_enhanced_market_transaction_system_fixed

Revision ID: 7c93be80c75f
Revises: 5c63ce71b6d2
Create Date: 2025-05-24 00:56:23.140450

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '7c93be80c75f'
down_revision = '5c63ce71b6d2'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('economic_metrics',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('metric_type', sa.String(length=20), nullable=False),
    sa.Column('total_trade_volume', sa.Integer(), nullable=False),
    sa.Column('total_transactions', sa.Integer(), nullable=False),
    sa.Column('average_transaction_value', sa.Float(), nullable=False),
    sa.Column('total_credits_in_circulation', sa.Integer(), nullable=False),
    sa.Column('credits_in_player_accounts', sa.Integer(), nullable=False),
    sa.Column('credits_in_npc_accounts', sa.Integer(), nullable=False),
    sa.Column('credit_velocity', sa.Float(), nullable=False),
    sa.Column('economic_health_score', sa.Float(), nullable=False),
    sa.Column('inflation_rate', sa.Float(), nullable=False),
    sa.Column('average_profit_margin', sa.Float(), nullable=False),
    sa.Column('market_volatility', sa.Float(), nullable=False),
    sa.Column('most_traded_commodity', sa.String(length=50), nullable=True),
    sa.Column('least_traded_commodity', sa.String(length=50), nullable=True),
    sa.Column('commodity_price_index', sa.Float(), nullable=False),
    sa.Column('most_active_sector', sa.Integer(), nullable=True),
    sa.Column('most_valuable_port', sa.UUID(), nullable=True),
    sa.Column('economic_disparity_index', sa.Float(), nullable=False),
    sa.Column('richest_player_credits', sa.Integer(), nullable=False),
    sa.Column('median_player_credits', sa.Integer(), nullable=False),
    sa.Column('total_players_trading', sa.Integer(), nullable=False),
    sa.Column('new_traders', sa.Integer(), nullable=False),
    sa.Column('calculated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['most_valuable_port'], ['ports.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('date')
    )
    op.create_index('ix_economic_metrics_date', 'economic_metrics', ['date'], unique=False)
    op.create_index('ix_economic_metrics_type_date', 'economic_metrics', ['metric_type', 'date'], unique=False)
    op.create_table('enhanced_market_transactions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('player_id', sa.UUID(), nullable=True),
    sa.Column('port_id', sa.UUID(), nullable=True),
    sa.Column('transaction_type', sa.Enum('BUY', 'SELL', 'TRANSFER', 'ADMIN_ADJUSTMENT', name='transactiontype'), nullable=False),
    sa.Column('commodity', sa.String(length=50), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('unit_price', sa.Integer(), nullable=False),
    sa.Column('total_value', sa.Integer(), nullable=False),
    sa.Column('port_buy_price', sa.Integer(), nullable=True),
    sa.Column('port_sell_price', sa.Integer(), nullable=True),
    sa.Column('port_quantity', sa.Integer(), nullable=True),
    sa.Column('sector_id', sa.Integer(), nullable=True),
    sa.Column('sector_uuid', sa.UUID(), nullable=True),
    sa.Column('timestamp', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('profit_margin', sa.Float(), nullable=True),
    sa.Column('market_impact', sa.Float(), nullable=True),
    sa.Column('admin_notes', sa.String(length=500), nullable=True),
    sa.Column('flagged_suspicious', sa.Boolean(), nullable=False),
    sa.Column('reviewed_by', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['player_id'], ['players.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['port_id'], ['ports.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['reviewed_by'], ['users.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['sector_uuid'], ['sectors.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_market_transactions_commodity', 'enhanced_market_transactions', ['commodity'], unique=False)
    op.create_index('ix_market_transactions_player_id', 'enhanced_market_transactions', ['player_id'], unique=False)
    op.create_index('ix_market_transactions_port_id', 'enhanced_market_transactions', ['port_id'], unique=False)
    op.create_index('ix_market_transactions_timestamp', 'enhanced_market_transactions', ['timestamp'], unique=False)
    op.create_table('market_prices',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('port_id', sa.UUID(), nullable=False),
    sa.Column('commodity', sa.String(length=50), nullable=False),
    sa.Column('buy_price', sa.Integer(), nullable=False),
    sa.Column('sell_price', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('previous_buy_price', sa.Integer(), nullable=True),
    sa.Column('previous_sell_price', sa.Integer(), nullable=True),
    sa.Column('price_trend', sa.Float(), nullable=False),
    sa.Column('volatility', sa.Float(), nullable=False),
    sa.Column('demand_level', sa.Float(), nullable=False),
    sa.Column('supply_level', sa.Float(), nullable=False),
    sa.Column('last_transaction_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('daily_volume', sa.Integer(), nullable=False),
    sa.Column('price_floor', sa.Integer(), nullable=True),
    sa.Column('price_ceiling', sa.Integer(), nullable=True),
    sa.Column('alert_threshold', sa.Float(), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['port_id'], ['ports.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_market_prices_unique', 'market_prices', ['port_id', 'commodity'], unique=True)
    op.create_index('ix_market_prices_updated_at', 'market_prices', ['updated_at'], unique=False)
    op.create_table('price_alerts',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('port_id', sa.UUID(), nullable=False),
    sa.Column('commodity', sa.String(length=50), nullable=False),
    sa.Column('alert_type', sa.String(length=30), nullable=False),
    sa.Column('threshold_value', sa.Float(), nullable=False),
    sa.Column('current_value', sa.Float(), nullable=False),
    sa.Column('severity', sa.String(length=20), nullable=False),
    sa.Column('message', sa.String(length=500), nullable=False),
    sa.Column('suggested_action', sa.String(length=200), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('triggered_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('acknowledged_by', sa.UUID(), nullable=True),
    sa.Column('acknowledged_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('resolved_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('auto_resolve', sa.Boolean(), nullable=False),
    sa.Column('resolve_threshold', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['acknowledged_by'], ['users.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['port_id'], ['ports.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_price_alerts_active', 'price_alerts', ['is_active'], unique=False)
    op.create_index('ix_price_alerts_triggered', 'price_alerts', ['triggered_at'], unique=False)
    op.create_table('price_history',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('port_id', sa.UUID(), nullable=False),
    sa.Column('commodity', sa.String(length=50), nullable=False),
    sa.Column('buy_price', sa.Integer(), nullable=False),
    sa.Column('sell_price', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('daily_volume', sa.Integer(), nullable=False),
    sa.Column('transactions_count', sa.Integer(), nullable=False),
    sa.Column('average_transaction_size', sa.Float(), nullable=False),
    sa.Column('demand_level', sa.Float(), nullable=False),
    sa.Column('supply_level', sa.Float(), nullable=False),
    sa.Column('market_efficiency', sa.Float(), nullable=False),
    sa.Column('snapshot_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('snapshot_type', sa.String(length=20), nullable=False),
    sa.ForeignKeyConstraint(['port_id'], ['ports.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_price_history_date_commodity', 'price_history', ['snapshot_date', 'commodity'], unique=False)
    op.create_index('ix_price_history_port_date', 'price_history', ['port_id', 'snapshot_date'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_price_history_port_date', table_name='price_history')
    op.drop_index('ix_price_history_date_commodity', table_name='price_history')
    op.drop_table('price_history')
    op.drop_index('ix_price_alerts_triggered', table_name='price_alerts')
    op.drop_index('ix_price_alerts_active', table_name='price_alerts')
    op.drop_table('price_alerts')
    op.drop_index('ix_market_prices_updated_at', table_name='market_prices')
    op.drop_index('ix_market_prices_unique', table_name='market_prices')
    op.drop_table('market_prices')
    op.drop_index('ix_market_transactions_timestamp', table_name='enhanced_market_transactions')
    op.drop_index('ix_market_transactions_port_id', table_name='enhanced_market_transactions')
    op.drop_index('ix_market_transactions_player_id', table_name='enhanced_market_transactions')
    op.drop_index('ix_market_transactions_commodity', table_name='enhanced_market_transactions')
    op.drop_table('enhanced_market_transactions')
    op.drop_index('ix_economic_metrics_type_date', table_name='economic_metrics')
    op.drop_index('ix_economic_metrics_date', table_name='economic_metrics')
    op.drop_table('economic_metrics')
    # ### end Alembic commands ###